# Page Layout Standards

## Feature Page Container

This document outlines the standardized page layout pattern used across all feature pages in the application. Using this pattern is required for all new features and pages to maintain consistency.

### Key Components

- `FeaturePageContainer`: A reusable component that handles the common layout structure for all feature pages
- Located at: `src/components/layout/FeaturePageContainer.tsx`

### Structure

Every feature page consists of two main sections:
1. **Header Section**: Contains the page title, description, and action buttons
2. **Content Container**: Contains the page content with a standardized border and scroll behavior

### Usage

```tsx
// Example usage in a page component
export default async function FeaturePage() {
  const t = await getTranslations('namespace');

  return (
    <FeaturePageContainer
      title={t('title')}
      description={t('description')}
      actions={<FeatureActions />}
    >
      <Suspense fallback={<FeatureSkeleton />}>
        <FeatureContent />
      </Suspense>
    </FeaturePageContainer>
  );
}
```

### Content Components Guidelines

When creating content components that will be used inside the `FeaturePageContainer`:

1. **DO NOT add borders to content components**
   - The container already provides the border
   - Use `border-0` and `shadow-none` on any Card components
   - Example: `<Card className="border-0 shadow-none">`

2. **Provide appropriate padding**
   - Content should have padding (usually `p-4` or `p-6`)
   - Empty states should maintain consistent padding

3. **Handle both content states**
   - Empty state: When no data is available
   - Content state: When data is displayed

### Current Implementation

This pattern is implemented across all major feature pages:
- Hosts Page
- Repositories Page 
- CI/CD Page
- Deployments Page

### Benefits

- Visual consistency across all pages
- Clear separation between header and content
- Standardized borders and spacing
- Consistent empty states
- Easier maintenance 