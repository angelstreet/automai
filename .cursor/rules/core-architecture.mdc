---
description: 
globs: 
alwaysApply: false
---
# Core Architecture Guidelines

## Three-Layer Architecture
1. **DB Layer (Core)**: `/src/lib/supabase/db-*.ts`
   - Direct database interaction via Supabase
   - Feature-specific modules in `/src/lib/supabase/db-{feature}/`
   - Returns consistent `DbResponse<T>` objects with `{success, data?, error?}`

2. **Server Actions Layer (Bridge)**: `/src/app/[locale]/[tenant]/*/actions.ts`
   - Server-only functions with 'use server' directive 
   - Call DB Layer functions, not other Server Actions
   - Handle validation, authentication, and caching
   - Return consistent `ActionResult<T>` objects

3. **Client Hooks Layer (Interface)**: `/src/context/*.tsx`
   - Context providers and hooks export as `use[Feature]` (e.g., `useHost`)
   - Call Server Actions, NEVER DB Layer directly
   - Manage loading/error states and UI caching
   - Import ONLY from the centralized context system, not feature-specific contexts

## Tech Stack
- Next.js App Router (React) with TypeScript
- Tailwind CSS with shadcn-ui components
- Supabase for authentication and database
- SSR-compatible context system

## Project Structure
- Feature-first organization in `/app/[locale]/[tenant]/[feature]/`
- Feature components in `_components/` subdirectory
- Feature-specific types, constants, actions in separate files
- Centralized context system in `/src/context/`

## Complete Architecture Overview
┌─────────────────────────────────┐
│ Client Components               │
│ /app/[locale]/[tenant]/*/      │ │  _components/ComponentName.tsx │
└───────────────┬─────────────────┘
│
│ import { useFeature } from '@/context'
▼
┌─────────────────────────────────┐
│ Centralized Context System      │
│ /src/context/FeatureContext.tsx│
│ - Exports useFeature() hook     │
│ - Manages UI state              │
│ - Handles loading/error states  │
└───────────────┬─────────────────┘
│
│ Server Actions call
▼
┌─────────────────────────────────┐
│ Server Actions Layer            │
│ /app/[locale]/[tenant]/*/      │ │  actions.ts                    │
│ - 'use server' directive        │
│ - Authentication & validation   │
│ - Caching logic                 │
└───────────────┬─────────────────┘
│
│ DB Layer call
▼
┌─────────────────────────────────┐
│ DB Layer                        │
│ /src/lib/supabase/db-feature/ │
│ - Direct database operations    │
│ - Tenant isolation              │
│ - Error handling                │
└───────────────┬─────────────────┘
│
│ Database connection
▼
┌─────────────────────────────────┐
│ Supabase/PostgreSQL             │
│ - Data persistence              │
└─────────────────────────────────┘