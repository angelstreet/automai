---
description: 
globs: 
alwaysApply: false
---
# Backend Development Guidelines

## API Implementation
- Create server actions in `/app/[locale]/[tenant]/[feature]/actions.ts`
- Always include 'use server' at the top of server actions files
- Validate user authentication in every server action
- Use Zod or similar for input validation
- Follow standard response format: `{success, data?, error?}`

## Database Access
- Organize database operations in feature-specific modules:
  - `/src/lib/supabase/db-[feature]/` with `index.ts` exports
  - Feature-specific files for different entities
- Always accept cookieStore parameter in DB functions
- Enforce tenant isolation in all database operations
- Use proper error handling and logging

## Authentication
- Use centralized `getUser()` from `/app/actions/user`
- Pass user data down to avoid redundant auth calls
- Check permissions appropriately in server actions
- Secure sensitive routes at both middleware and action levels

## Caching Strategy
- Implement caching at Server Actions layer
- Use `serverCache` utility with appropriate TTL values
- Clear cache entries when modifying data
- Include tenant_id in cache keys
- Never cache at DB layer or in components directly

## Context Providers
- Implement in `/src/context/[Feature]Context.tsx`
- Follow established patterns for state, actions, and error handling
- Use `useCallback` for all action functions
- Use `useMemo` for computed values and context value object
- Fetch data only on relevant routes
- Implement request throttling to prevent excessive API calls