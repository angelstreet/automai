---
description: 
globs: 
alwaysApply: false
---
# React Data Flow Patterns

## Core Architecture Principles

- ✅ **Server-Side Data Fetching**: Always fetch initial data on the server in layout or page components
- ✅ **Provider Initialization**: Pass server-fetched data to providers with `initialLoading=false`
- ✅ **Hook-Based Consumption**: Components consume data through hooks, not props
- ✅ **Single Source of Truth**: Data flows only through context, not parallel prop systems
- ❌ **NO Prop Drilling**: Do not pass data through multiple components via props
- ❌ **NO Redundant Fetching**: Never fetch the same data on both server and client

## Data Flow Implementation

### 1. Server Components (Layout/Page)

```typescript
// In layout.tsx or page.tsx (Server Component)
export default async function Layout({ children }) {
  // FETCH DATA SERVER-SIDE
  const user = await getUser();
  const teamResponse = await getTeamDetails();
  const permissions = await getUserPermissions(user?.id, teamResponse?.data?.team?.id);

  // Extract & transform data as needed
  const teamDetails = teamResponse.success ? teamResponse.data.team : null;

  // Pass to client component
  return (
    <ClientComponent 
      user={user} 
      teamDetails={teamDetails}
      permissions={permissions}
    >
      {children}
    </ClientComponent>
  );
}
```