//DO NOT EDIT THIS FILE
import { createServerClient } from '@supabase/ssr';
import { ReadonlyRequestCookies } from 'next/dist/server/web/spec-extension/adapters/request-cookies';
import { cookies } from 'next/headers';

export const createClient = async (cookieStore?: ReadonlyRequestCookies) => {
  const cookieHandler = cookieStore || (await cookies());

  return createServerClient(
    process.env.NEXT_PUBLIC_SUPABASE_URL!,
    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!,
    {
      cookies: {
        async get(name) {
          try {
            const cookie = await cookieHandler.get(name);
            return cookie?.value;
          } catch (error: unknown) {
            const errorMessage = error instanceof Error ? error.message : 'Unknown error';
            console.warn(`[@supabase:server] Could not get cookie ${name}: ${errorMessage}`);
            return undefined;
          }
        },
        async set(name, value, options) {
          try {
            cookieHandler.set(name, value, options);
          } catch (error: unknown) {
            // Skip cookie setting in contexts where it's not allowed
            const errorMessage = error instanceof Error ? error.message : 'Unknown error';
            console.warn(`[@supabase:server] Could not set cookie ${name}: ${errorMessage}`);
          }
        },
        async remove(name, options) {
          try {
            cookieHandler.set(name, '', { ...options, maxAge: 0 });
          } catch (error: unknown) {
            // Skip cookie removal in contexts where it's not allowed
            const errorMessage = error instanceof Error ? error.message : 'Unknown error';
            console.warn(`[@supabase:server] Could not remove cookie ${name}: ${errorMessage}`);
          }
        },
      },
    },
  );
};
