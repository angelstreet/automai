//DO NOT EDIT THIS FILE
import { createServerClient } from '@supabase/ssr';
import { ReadonlyRequestCookies } from 'next/dist/server/web/spec-extension/adapters/request-cookies';
import { cookies } from 'next/headers';

export const createClient = async (cookieStore?: ReadonlyRequestCookies) => {
  try {
    // Ensure cookieHandler is properly awaited
    const cookieHandler = cookieStore || (await cookies());

    return createServerClient(
      process.env.NEXT_PUBLIC_SUPABASE_URL!,
      process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!,
      {
        cookies: {
          // Use a simplified, non-async getter that won't cause Next.js issues
          get(name) {
            try {
              return cookieHandler.get(name)?.value || '';
            } catch (error) {
              console.warn(
                `[@supabase:server] Error getting cookie '${name}': ${
                  error instanceof Error ? error.message : String(error)
                }`,
              );
              return '';
            }
          },
          set(name, value, options) {
            try {
              cookieHandler.set(name, value, options);
            } catch (error) {
              console.warn(
                `[@supabase:server] Error setting cookie '${name}': ${
                  error instanceof Error ? error.message : String(error)
                }`,
              );
            }
          },
          remove(name, options) {
            try {
              cookieHandler.set(name, '', { ...options, maxAge: 0 });
            } catch (error) {
              console.warn(
                `[@supabase:server] Error removing cookie '${name}': ${
                  error instanceof Error ? error.message : String(error)
                }`,
              );
            }
          },
        },
      },
    );
  } catch (error) {
    console.error(
      `[@supabase:server] Error creating client: ${
        error instanceof Error ? error.message : String(error)
      }`,
    );
    throw error;
  }
};
