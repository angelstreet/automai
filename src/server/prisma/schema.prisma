generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Connection {
  id            String          @id @default(cuid())
  name          String
  description   String?
  type          String
  ip            String
  port          Int?
  username      String?
  password      String?
  status        String          @default("pending")
  errorMessage  String?
  lastConnected DateTime?
  userId        String
  tenantId      String?
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  tenant        Tenant?         @relation(fields: [tenantId], references: [id])
  user          User            @relation(fields: [userId], references: [id])
  logs          ConnectionLog[]

  @@index([userId])
  @@index([tenantId])
}

model User {
  id               String            @id @default(cuid())
  name             String?
  email            String?           @unique
  emailVerified    DateTime?
  image            String?
  role             String            @default("USER")
  tenantId         String?
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
  provider         String?
  connections      Connection[]
  connectionLogs   ConnectionLog[]
  hostFingerprints HostFingerprint[]
  tenant           Tenant?           @relation(fields: [tenantId], references: [id])

  @@index([tenantId])
  @@index([email, provider])
}

model Tenant {
  id               String            @id @default(cuid())
  name             String
  domain           String?           @unique
  plan             String            @default("free")
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
  connections      Connection[]
  connectionLogs   ConnectionLog[]
  hostFingerprints HostFingerprint[]
  users            User[]
}

model ConnectionLog {
  id           String      @id @default(cuid())
  timestamp    DateTime    @default(now())
  level        String
  message      String
  action       String?
  userId       String?
  tenantId     String?
  connectionId String?
  ip           String?
  metadata     Json?
  createdAt    DateTime    @default(now())
  connection   Connection? @relation(fields: [connectionId], references: [id])
  tenant       Tenant?     @relation(fields: [tenantId], references: [id])
  user         User?       @relation(fields: [userId], references: [id])

  @@index([userId])
  @@index([tenantId])
  @@index([connectionId])
  @@index([action])
  @@index([level])
  @@index([timestamp])
}

model HostFingerprint {
  id          String   @id @default(cuid())
  host        String
  port        Int      @default(22)
  fingerprint String
  verified    Boolean  @default(false)
  userId      String
  tenantId    String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  tenant      Tenant?  @relation(fields: [tenantId], references: [id])
  user        User     @relation(fields: [userId], references: [id])

  @@unique([host, userId])
  @@index([userId])
  @@index([tenantId])
  @@index([host])
}
