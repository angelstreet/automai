// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                     String    @id @default(uuid())
  email                  String    @unique
  password              String?
  name                  String?
  role                  String    @default("USER") // USER, ADMIN
  provider              String?   // For OAuth (google, github, etc.)
  providerId           String?   // External provider's user ID
  providerAccessToken  String?   // OAuth access token
  providerRefreshToken String?   // OAuth refresh token
  tenantId              String?
  tenant                Tenant?   @relation(fields: [tenantId], references: [id])
  projects              Project[]
  createdAt             DateTime  @default(now())
  updatedAt             DateTime  @updatedAt
  emailVerified         Boolean   @default(false)
  verificationToken     String?
  verificationTokenExpiry DateTime?
  resetToken           String?
  resetTokenExpiry     DateTime?

  @@unique([provider, providerId]) // Ensure unique provider+providerId combination
}

model Tenant {
  id        String    @id @default(uuid())
  name      String    @unique
  users     User[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Project {
  id        String     @id @default(uuid())
  name      String
  ownerId   String     
  owner     User       @relation(fields: [ownerId], references: [id])
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  testcases TestCase[]
}

model TestCase {
  id         String      @id @default(uuid())
  name       String
  projectId  String     
  project    Project    @relation(fields: [projectId], references: [id])
  steps      Json
  lockedBy   String?
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  executions Execution[]
}

model Execution {
  id         String    @id @default(uuid())
  testcaseId String    
  testcase   TestCase  @relation(fields: [testcaseId], references: [id])
  projectId  String    
  status     String    @default("pending")
  reportUrl  String?   
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
} 